{
  "name": "Student Support",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cb410628-ef98-4497-ba1d-c8ef355ade12",
                    "leftValue": "Academic",
                    "rightValue": "={{ $json.output.category }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Academic"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5a83f53d-8e10-4aa1-95e7-35e58f073868",
                    "leftValue": "Technical",
                    "rightValue": "={{ $json.output.category }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Technical"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "loose",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1e1a483a-d50c-4518-821e-4ab2a99dec58",
                    "leftValue": "Admission",
                    "rightValue": "={{ $json.output.category }}",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Admission"
            }
          ]
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        -1344,
        272
      ],
      "id": "bcea5905-ade4-49e0-8cbb-dc611a43cd20",
      "name": "Switch"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an intelligent message classification assistant that formats messages for Slack.\n\nYour task is to analyze the user's message and create a structured output with:\n\n1. \"category\": Choose EXACTLY one of the following support teams:\n\n   - \"Academic\" ‚Üí for study-related, subject doubts, or academic guidance\n   - \"Technical\" ‚Üí for bugs, errors, software/platform issues, or technical questions\n   - \"Admission\" ‚Üí for enrollment, registration, application, or admission-related queries\n\n2. \"priority\": Assign the urgency level\n   - Default: \"Normal\"\n   - If the message includes words such as \"urgent\", \"asap\", \"immediately\", or \"critical\", set to \"High\"\n\n3. Extract all relevant information from the incoming form submission\n----\n\nInputs :\n\n- Name = {{ $json.Name }}\n- Gmail = {{ $json.Gmail }}\n- Issue/Problem Raised = {{ $json['problem / Issue  '] }}\n- category = AI should decide the Category \n- Subject = Create a subject based on Issue/Problem Raised ‚Üí {{ $json['problem / Issue  '] }}\n- description = Create a description based on Issue/Problem Raised ‚Üí {{ $json['problem / Issue  '] }}\n- Ticket\n\n---\n\nReturn ONLY valid JSON in this exact structure (no explanations, no comments):\n\n{\n  \"channel\": \"string\",\n  \"priority\": \"string\",\n  \"category\": \"string\",\n  \"subject\": \"string\",\n  \"description\": \"string\",\n  \"name\": \"{{ $json.Name }}\",\n  \"email\": \"{{ $json.Gmail }}\",\n  \"timestamp\": \"{{ $json.submittedAt }}\",\n  \"ticketId\": \"Create Random ID with number + Alphabets\"\n}\n\n---\n\nClassification examples:\n- \"Need help with semester syllabus\" ‚Üí { \"channel\": \"Academic\", \"priority\": \"Normal\", \"category\": \"Academic\" }\n- \"Urgent! My portal is not opening\" ‚Üí { \"channel\": \"Technical\", \"priority\": \"High\", \"category\": \"Technical\" }\n- \"How can I apply for admission?\" ‚Üí { \"channel\": \"Admission\", \"priority\": \"Normal\", \"category\": \"Admission\" }\n",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -1712,
        272
      ],
      "id": "223c0f25-af20-48d3-a5d3-21ce47ed4b5e",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"category\": \"string\",\n  \"subject\": \"string\",\n  \"priority\": \"string\",\n  \"description\": \"string\",\n  \"name\": \"string\",\n  \"email\": \"string\",\n  \"timestamp\": \"string\",\n  \"ticketId\": \"string\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1536,
        544
      ],
      "id": "157eb8b7-5328-45f9-aa85-cd955ec5db1b",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are an Academic Support Email Assistant.\n\nScope:\n- ONLY handle academic questions (concepts, exercises, explanations, study tips).\n- If the input is not academic, politely say it‚Äôs out of scope and recommend contacting the appropriate team.\n\n\nInputs :\n\nInput format (JSON keys you will receive):\n- category (expected: \"Academic\")\n- subject : {{ $json.output.subject }}\n- priority :{{ $json.output.priority }}\n- description: {{ $json.output.description }}\n- name :{{ $json.output.name }}\n- email :{{ $json.output.email }}\n- timestamp :{{ $json.output.timestamp }}\n- ticketId:{{ $json.output.ticketId }}\n\nYour tasks:\n1) Understand the academic question from the JSON (prefer description/subject).\n2) Provide a concise, correct solution or explanation with clear steps.\n3) Offer 1‚Äì3 short practice suggestions or next steps.\n\nOutput:\n\nOutput strictly as a single JSON object with EXACTLY these fields:\n{\n  \"subject\": \"Give me exact sunject based on question\",\n  \"body_text\": \"string\",\n  \"body_html\": \"string\"\n}\n\nFormatting rules:\n- subject: \"Question [{{ $('Contact Form').item.json['problem / Issue  '] }}]-Ticket {{ $json.output.ticketId }}\"\n- body_text: plain text, short paragraphs, no markdown.\n- body_html: simple HTML only (<p>, <ul>, <li>, <strong>).\n- Keep tone supportive and clear.\n- End both bodies with this sign-off block exactly:\n  ‚Äî\n  Academic Support Team\n  Ticket: {{ $json.output.ticketId }}\n\nGuardrails:\n- If category != \"Academic\" or the question is not academic, do NOT solve it; reply that it‚Äôs out of scope and suggest contacting the correct team.\n- Do not include any other keys or commentary outside the required JSON fields.\n\n\n\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -1088,
        -128
      ],
      "id": "a4baa771-42d4-4b96-be81-8aa6bd690a22",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"subject\": \"string\",\n  \"body_text\": \"string\",\n  \"body_html\": \"string\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -928,
        80
      ],
      "id": "7ce60fab-d6cf-486c-bfb0-112a8f288a1a",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "formTitle": "Bot Campus Contact Form",
        "formDescription": "Please drop your issue / problems here ...üëáüèª",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Name",
              "placeholder": "Please Enter your name ",
              "requiredField": true
            },
            {
              "fieldLabel": "Gmail",
              "fieldType": "email",
              "placeholder": "Enter your Email",
              "requiredField": true
            },
            {
              "fieldLabel": "problem / Issue  ",
              "fieldType": "textarea",
              "placeholder": "Enter your Issue !",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.3,
      "position": [
        -2064,
        240
      ],
      "id": "3843876b-af0d-4c4c-b74a-a7e47b061102",
      "name": "Contact Form",
      "webhookId": "f382717c-2c85-4303-a3ce-663cd6521710"
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1712,
        512
      ],
      "id": "3b22272d-a4dc-41d7-a3c3-b7c20f50053c",
      "name": "Category Fetcher",
      "credentials": {
        "googlePalmApi": {
          "id": "FFJ0QF9gDVGDZ2sr",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1104,
        64
      ],
      "id": "7a2e21eb-9f0e-4323-a862-01d421bd945e",
      "name": "Solution",
      "credentials": {
        "googlePalmApi": {
          "id": "FFJ0QF9gDVGDZ2sr",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1Ckpi4oZNWVSappQaOkcNZl5AtimN7gLsY27xl1qSD5M",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1Ckpi4oZNWVSappQaOkcNZl5AtimN7gLsY27xl1qSD5M/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "description": "={{ $json.output.description }}",
            "email": "={{ $json.output.email }}",
            "timestramp": "={{ $json.output.timestamp }}",
            "ticketid": "={{ $json.output.ticketId }}",
            "statues": "not yet cleared"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "description",
              "displayName": "description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "timestramp",
              "displayName": "timestramp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "ticketid",
              "displayName": "ticketid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "statues",
              "displayName": "statues",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -1008,
        256
      ],
      "id": "3fe5ae86-3fde-49d8-b4b6-f9193bf73a6e",
      "name": "Technical Support",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "PwHhcfAGQJDj3KVy",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $('Switch').item.json.output.email }}",
        "subject": "={{ $json.output.subject }}",
        "message": "={{ $json.output.body_html }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -752,
        -112
      ],
      "id": "1a7856cd-606a-48e8-9bc0-ee94c3a90f60",
      "name": "Answer Email",
      "webhookId": "0cf3c8dc-d202-4187-9e49-5974b0a2ce67",
      "credentials": {
        "gmailOAuth2": {
          "id": "UHZa8dl21qZshVrS",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ $json.email }}",
        "subject": "=Raised Complant Request is Solved",
        "emailType": "text",
        "message": "=Issue: {{ $json.description }}\nTicketid: {{ $json.ticketid }}\nComplaint: Resolved",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -800,
        256
      ],
      "id": "2b505140-3cb2-49b1-bdda-7d306f0c42ea",
      "name": "Technical issue Solved Mail",
      "webhookId": "5271621b-0685-48ec-b2f7-b1b63fbfd27c",
      "credentials": {
        "gmailOAuth2": {
          "id": "UHZa8dl21qZshVrS",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "krus0523@gmail.com",
        "subject": "=New Customer ",
        "emailType": "text",
        "message": "=Category: {{ $json.output.category }}\nName: {{ $json.output.name }}\nEmail: {{ $json.output.email }}\nNote: {{ $json.output.subject }}\nTicketId: {{ $json.output.ticketId }}\nTimeStamp: {{ $json.output.timestamp }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -992,
        448
      ],
      "id": "25640537-7c80-4ee9-be10-81a67ce37dd6",
      "name": "Admission Mail",
      "webhookId": "f99eb41a-6210-4a7b-91bd-a6a3d1c502ed",
      "credentials": {
        "gmailOAuth2": {
          "id": "UHZa8dl21qZshVrS",
          "name": "Gmail account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Switch": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Technical Support",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admission Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Answer Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contact Form": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Category Fetcher": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Solution": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Technical Support": {
      "main": [
        [
          {
            "node": "Technical issue Solved Mail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "6f90642d-4eb4-4702-9c92-ac9cae20ffcd",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0668e88de7a16f28d063324a020917a9ba638413818ac1cc358f702865c45d84"
  },
  "id": "dnbJngEseemDof9x",
  "tags": []
}